void leftbig(int *x,int l)
{
	int i;
	if(x[0]==1 && x[1]==0)return;
	for(i=x[0];i>=1;i--)x[i+l]=x[i];
	for(i=1;i<=l;i++)x[i]=0;
	x[0]+=l;
}

void sqrtbig(int *x,int *y)   /* BASE 10 */
{
	int i=x[0],j,a;
	static BG m,c,t,o;
	tozero(m);tozero(c);x[x[0]+1]=0;
	if(i%2==0){i--;}
	y[0]=i/2+1;o[0]=1;
	for(;i>=1;i-=2)
	{
		leftbig(m,1);leftbig(c,2);c[2]=x[i+1];c[1]=x[i];
		if(c[2] && c[0]<2)c[0]=2;if(c[1] && c[0]<1)c[0]=1;
		for(j=9;j>=1;j--)
		{
			m[1]=j;t[m[0]+1]=0;
			for(a=1;a<=m[0];a++)t[a]=m[a]*j;
			for(a=1;a<=m[0];a++)if(t[a]>=BASE){t[a+1]+=t[a]/BASE;t[a]%=BASE;}
			t[0]=t[m[0]+1]?m[0]+1:m[0];
			if(cmpbig(c,t)>=0)break;
		}
		if(j){o[1]=j;incbig(m,o);decbig(c,t);}
		else m[1]=0;
		y[i/2+1]=j;
	}
}